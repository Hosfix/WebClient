//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetJsonRates", ReplyAction="http://tempuri.org/IService/GetJsonRatesResponse")]
        string GetJsonRates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetJsonRates", ReplyAction="http://tempuri.org/IService/GetJsonRatesResponse")]
        System.Threading.Tasks.Task<string> GetJsonRatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetJsonOrders", ReplyAction="http://tempuri.org/IService/GetJsonOrdersResponse")]
        string GetJsonOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetJsonOrders", ReplyAction="http://tempuri.org/IService/GetJsonOrdersResponse")]
        System.Threading.Tasks.Task<string> GetJsonOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalculateTip", ReplyAction="http://tempuri.org/IService/CalculateTipResponse")]
        System.Tuple<string, decimal> CalculateTip(string sku, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalculateTip", ReplyAction="http://tempuri.org/IService/CalculateTipResponse")]
        System.Threading.Tasks.Task<System.Tuple<string, decimal>> CalculateTipAsync(string sku, string currency);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WebClient.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WebClient.ServiceReference1.IService>, WebClient.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetJsonRates() {
            return base.Channel.GetJsonRates();
        }
        
        public System.Threading.Tasks.Task<string> GetJsonRatesAsync() {
            return base.Channel.GetJsonRatesAsync();
        }
        
        public string GetJsonOrders() {
            return base.Channel.GetJsonOrders();
        }
        
        public System.Threading.Tasks.Task<string> GetJsonOrdersAsync() {
            return base.Channel.GetJsonOrdersAsync();
        }
        
        public System.Tuple<string, decimal> CalculateTip(string sku, string currency) {
            return base.Channel.CalculateTip(sku, currency);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<string, decimal>> CalculateTipAsync(string sku, string currency) {
            return base.Channel.CalculateTipAsync(sku, currency);
        }
    }
}
